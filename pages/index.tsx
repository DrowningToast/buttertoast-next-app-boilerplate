import type { NextPage } from "next";
import Head from "next/head";
import { motion } from "framer-motion";
import Email from "@components/forms/Email/Email";
import Password from "@components/forms/Password/Password";
import Submit from "@components/forms/Submit/Submit";
import { SubmitHandler, useForm } from "react-hook-form";
import {
  handleLoginWithEmail,
  SignOut,
} from "@components/system/firebase/auth";

type formValue = {
  email: string;
  password: string;
};

const Home: NextPage = () => {
  const { register, handleSubmit } = useForm<formValue>();

  const handleLogin = async (data: formValue) => {
    try {
      await handleLoginWithEmail(data.email, data.password);
      alert("Sucessfully signed in");
    } catch (e) {
      alert(e);
    }
  };

  return (
    <>
      <Head>
        <title>Powered By Buttertoast</title>
        <meta
          name="description"
          content="Generated by create next app, Buttertoast boilerplate"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <motion.main
        initial={{
          opacity: 0,
        }}
        animate={{
          opacity: 1,
          transition: {
            duration: 2,
            delay: 1,
          },
        }}
        className="grid place-items-center h-screen"
      >
        <div className="flex flex-col gap-y-6 items-center">
          <h1 className="text-6xl mb-16">
            Buttertoast Base Setup with HTTP & Redux Ready
          </h1>
          <h2 className="text-4xl mb-4">Powered by</h2>
          <ul>
            <li>Next js</li>
            <li>Tailwind CSS</li>
            <li>Sass</li>
            <li>Framer Motion</li>
            <li>DaisyUI</li>
            <li>Axios</li>
            <li>Redux</li>
          </ul>
          {userReady && !user && (
            <form onSubmit={handleSubmit(handleLogin)}>
              <div className="form-control">
                <label className="label">
                  <span className="label-text">Your Email</span>
                </label>
                <label className="input-group">
                  <span>Email</span>
                  <Email
                    r={register("email", {
                      required: true,
                    })}
                    placeholder="info@site.com"
                    ClassName="input input-bordered w-full"
                  />
                </label>
                <label className="label">
                  <span className="label-text">Your password</span>
                </label>
                <label className="input-group">
                  <span>Password</span>
                  <Password
                    r={register("password", {
                      required: true,
                    })}
                    placeholder="Secret Password~"
                    ClassName="input input-bordered w-full"
                  />
                </label>
                <Submit
                  text="Login"
                  noDefaultStyles={false}
                  ClassName="btn btn-primary my-8"
                ></Submit>
              </div>
            </form>
          )}
          {userReady && user && (
            <>
              <div>Currently logged in</div>
              <button
                className="btn btn-accent"
                onClick={async () => {
                  try {
                    await SignOut();
                    alert("Sucessfully signed out");
                  } catch (e) {
                    alert(e);
                  }
                }}
              >
                Signout
              </button>{" "}
            </>
          )}
        </div>
      </motion.main>
    </>
  );
};

export default Home;
